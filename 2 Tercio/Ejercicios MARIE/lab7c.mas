Clear
		Input
		Store		A
		Load		A
for,		Skipcond	400
		Jump		for_body
		Jump		end_for				
for_body,	Load		A
		Subt		ONE
		Store		A
		Input
		Store		AN
		Input
		Store		AD
				
		Load		AN
		Store		MCD_A
		Load		AD
		Store		MCD_B
		JnS		mcd
		Store		M
				
		Load		AN
		Store		DIV_A
		Load		M
		Store		DIV_B
		JnS		div
		Store		AN
				
		Load		AD
		Store		DIV_A
		Load		M
		Store		DIV_B
		JnS		div
		Store		AD				
				
		Load		AN
		Store		EGY_A
		Load		AD
		Store		EGY_B
		JnS		egy
		Store		R
		Load		R
		Output
		Load		ZERO
		Output
		Load		A
		Jump		for
end_for,	Clear
		Store		A
		Store		AN
		Store		AD
		Store		R
		Halt
				
ONE,		Dec		1
A,		Dec		0
AN,		Dec		0
AD,		Dec		0
R,		Dec		0
ZERO,		Dec		0
M,		Dec		0


/ EGY
egy,		Dec		0
		Clear
egy_while,	Load		EGY_B		
		Store		MOD_A
		Load		EGY_A		
		Store		MOD_B
		JnS		mod		
		Store		R_EG		
		Load		R_EG
		Skipcond	400		
		Jump		egy_while_body	
		Jump		egy_end_while	
egy_while_body,	Load		EGY_B
		Store		DIV_A
		Load		EGY_A
		Store		DIV_B
		JnS		div
		Store		D_EGY

		Load		D_EGY
		Add		ONE
		Store		D_EGY		
		Load		D_EGY
		Output
			
		Load		EGY_A
		Store		MUL_A
		Load		D_EGY
		Store		MUL_B
		JnS		mul	
		Store		M_N		
				
		Load		M_N
		Subt		EGY_B
		Store		M_N		
				
		Load		EGY_B
		Store		MUL_A
		Load		D_EGY
		Store		MUL_B
		JnS		mul
		Store		M_D		
		
		Load		M_D
		Store		MCD_A
		Load		M_N
		Store		MCD_B
		JnS		mcd
		Store		DIV_E		
		
		Load		M_N
		Store		DIV_A
		Load		DIV_E
		Store		DIV_B
		JnS		div
		Store		EGY_A		
			
		Load		M_D
		Store		DIV_A
		Load		DIV_E
		Store		DIV_B
		JnS		div
		Store		EGY_B		
				
		Jump		egy_while
egy_end_while,	Load		EGY_B
		JumpI		egy				
EGY_A,		Dec		0
EGY_B,		Dec		0
R_EG,		Dec		0
M_N,		Dec		0
M_D,		Dec		0
DIV_E,		Dec		0
D_EGY,		Dec		0
				


/MCD
mcd,		Dec		0
		Clear
		Load		MCD_A
		Store		MOD_A
		Load		MCD_B
		Store		MOD_B
		JnS		mod
		Store		RES
		Load		MCD_B
		Store		NUM
mcd_while,	Load		RES
		Skipcond	400
		Jump		mcd_while_body
		Jump		mcd_end_while
mcd_while_body,	Load		NUM
		Store		MCD
		Load		RES
		Store		NUM
		Load		MCD
		Store		MOD_A
		Load		NUM
		Store		MOD_B
		JnS		mod
		Store		RES
		Jump		mcd_while
mcd_end_while,	Load		NUM
		Store		MCD
		Load		MCD
		JumpI		mcd
MCD_A,		Dec		0
MCD_B,		Dec		0
MCD,		Dec		0
RES,		Dec		0
NUM,		Dec		0


/DIV
div,		Dec		0
		Clear
		Store		DIV_D		
div_while,	Load		DIV_A
		Subt		DIV_B
		Skipcond	000
		Jump		div_whilebody
		Jump		div_endwhile
div_whilebody,	Load		DIV_A
		Subt		DIV_B
		Store		DIV_A
		Load		DIV_D
		Add		ONE
		Store		DIV_D
		Jump		div_while
div_endwhile,	Load		DIV_D
		JumpI		div
DIV_A,		Dec		0
DIV_B,		Dec		0
DIV_D,		Dec		0


/MOD
mod,		Dec		0
mod_while,	Load		MOD_A
		Subt		MOD_B
		Skipcond	000
		Jump		mod_whilebody
		Jump		mod_endwhile
mod_whilebody,	Load		MOD_A
		Subt		MOD_B
		Store		MOD_A
		Jump		mod_while
mod_endwhile,	Load		MOD_A
		/Output
		JumpI		mod
MOD_A,		Dec		0
MOD_B,		Dec		0


/MUL
mul,		Dec		0
		Clear
		Store		MUL_I		
		Store		MUL_M		
mul_while,	Load		MUL_I
		Subt		MUL_B
		Skipcond	000		
		Jump		mul_endwhile
		Load		MUL_M
		Add		MUL_A
		Store		MUL_M
		Load		MUL_I
		Add		ONE
		Store		MUL_I
		Jump		mul_while
mul_endwhile,	Load		MUL_M
		JumpI		mul
MUL_A,		Dec		0
MUL_B,		Dec		0
MUL_I,		Dec		0
MUL_M,		Dec		0